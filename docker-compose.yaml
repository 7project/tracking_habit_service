version: "3.8"
services:
 db:
   container_name: "postgres"
   image: postgres:14.1-alpine
   restart: always
   environment:
     - POSTGRES_USER=${DB_USER}
     - POSTGRES_PASSWORD=${DB_PASS}
     - POSTGRES_DB=${DB_NAME}
   ports:
     - "5432:5432"
   volumes:
     - ./data/db:/var/lib/postgresql/data
   networks:
     - backend
 fastapi:
   container_name: "fastapi"
   build: .
   command: uvicorn main:app --reload --host 0.0.0.0 --port 8000
   ports:
     - "8000:8000"
   volumes:
     - .:/code
   networks:
     - backend
 nginx:
   image: nginx:latest
   container_name: nginx
   volumes:
     - ./nginx.conf:/etc/nginx/conf.d/default.conf
   ports:
     - "80:80"
   depends_on:
     - fastapi
   networks:
     - backend
 bot:
   container_name: "bot"
   build: ./bot
   command: python main.py
   restart: always
   environment:
     - BOT_TOKEN=${BOT_TOKEN}
     - DATABASE_URL_NOT_ASYNC=${DATABASE_URL_NOT_ASYNC}
     - BLOCKED_ID_TELEGRAM_USER1=${BLOCKED_ID_TELEGRAM_USER1}
     - BLOCKED_ID_TELEGRAM_USER2=${BLOCKED_ID_TELEGRAM_USER2}
     - BLOCKED_ID_TELEGRAM_USER3=${BLOCKED_ID_TELEGRAM_USER3}
   ports:
     - "8080:8080"
   depends_on:
     - fastapi
   volumes:
     - ./bot/database/db/:/code/database/db/
   networks:
     - backend
 supervisor:
   container_name: "supervisor"
   build: ./supervisor
   command: supervisord -c main_send_message_bot.conf
   ports:
     - "8880:8880"
   depends_on:
     - fastapi
   volumes:
     - ./supervisor/logs:/code/logs
   networks:
     - backend


networks:
 backend:
   driver: bridge

volumes:
 db:
   driver: local
 supervisor:
   driver: local
 bot:
   driver: local
